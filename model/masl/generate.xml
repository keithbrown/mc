<?xml version="1.0" encoding="UTF-8"?>
<project name="masl" default="all" basedir=".">
  <target name="all"
          description="Generate all code for this project"
          depends="sql,java,format_java">
          <!-- depends="sql,schema,java,format_java" -->
  </target>

  <target name="nb_all"
          description="Generate all code for this project"
          depends="sql,java">
  </target>

  <property name="bp-code-home" value="${basedir}/../../../bridgepoint"/>
  <property name="plugins-home" value="${ant.home}/../.."/>
  <property name="util_bin_dir" value="${bp-code-home}/src/org.xtuml.bp.mc.c.binary/mc3020/bin"/>
  <property name="global_dts" value="${bp-code-home}/src/org.xtuml.bp.pkg/globals/Globals.xtuml"/>

  <property name="sql.input" value="models/masl/masl" />
  <property name="sql.output" value="masl.sql" />

  <property name="subsystems_to_remove" value="ACT_ V_ E_ GD_ CT_ TS_ DIM_ STY_" />

  <target name="sql.depends" >
    <uptodate property="sql.buildNotNeeded" value="yes" targetfile="sql/${sql.output}">
        <srcfiles dir= "${sql.input}" includes="**/*.xtuml" />
    </uptodate>
  </target>

  <target name="sql" depends="sql.depends"
          description="Generate the sql version of the MASL model"
          unless="sql.buildNotNeeded" >
    <echo>Generating ${sql.output} ...</echo>
  	<echo>    basedir = ${basedir}</echo>
    <echo>    bp-code-home = ${bp-code-home}</echo>
  	<echo>    plugins-home = ${plugins-home}</echo>
  	<echo>    util_bin_dir = ${util_bin_dir}</echo>
  	<echo>    global_dts = ${global_dts}</echo>

    <copy file="${global_dts}" tofile="${sql.input}/Globals.xtuml" />
    <exec vmlauncher="false" failonerror="true" executable="${util_bin_dir}/xtumlmc_build.exe" >
      <arg line="xtumlmc_cleanse_for_BridgePoint ${sql.input} sql/${sql.output} ${subsystems_to_remove}" />
    </exec>
    <delete file="${sql.input}/Globals.xtuml" />
  </target>

  <property name="mcj_path" value="${bp-code-home}/src/MC-Java" />
  <property file="${mcj_path}/mc_java.depends" />

  <property name="sg.dep" value="ooa_schema.sql,schema_gen.arc" />
  <property name="schema.output" value="masl_metamodel_schema.sql" />

  <target name="schema.depends" >
    <uptodate property="schema.buildNotNeeded" targetfile="sql/${schema.output}">
       <srcfiles dir = "sql"        includes = "${sql.output}"/>
       <srcfiles dir = "${mcj_path}" includes = "${sg.dep}"/>
    </uptodate>
  </target>

  <target name="schema"
          depends="schema.depends"
          description="Generate the MASL database schema file"
          unless="schema.buildNotNeeded" >
    <echo >Generating ${schema.output} ...</echo>
  <ant antfile="${mcj_path}/build.xml" target="generate.schema" >
    <property name="param1" value="${sql.output}" />
    <property name="param2" value="${mcj_path}" />
    <property name="param3" value="TRUE" />
    <property name="param4" value="masl" />
  </ant>
  <!-- Need to move the output file since the archetype uses the domain
       name as the base name of the output file -->
  <move file="sql/masl_schema.sql" tofile="sql/${schema.output}" />
  </target>

  <property name="java.sql.dep" value="${sql.output}" />
  <property name="java.color.dep" value="" />
  <property name="java.tj.dep" value="ooa_schema.sql,${java.arc.depends}" />

  <property name="java.output" value="src/masl.java" />

  <target name="java.depends" >
    <uptodate property="java.buildNotNeeded" targetfile="${java.output}">
       <srcfiles dir = "sql" includes = "${sql.output}" />
       <srcfiles dir = "color"      includes = "${java.color.dep}" />
       <srcfiles dir = "${mcj_path}" includes = "${java.tj.dep}"/>
    </uptodate>
  </target>

  <target name="java"
          depends="java.depends"
          description="Generate the MASL outline file"
          unless="java.buildNotNeeded" >
    <echo >Generating java files ...</echo>
    <ant antfile="${mcj_path}/build.xml" target="generate.java" >
      <property name="param1" value="masl" />
      <property name="param2" value="Masl" />
      <property name="param3" value="${mcj_path}" />
      <property name="verify_selects" value="false" />
      <property name="mcjava.project.root" value="${basedir}"/>
    </ant>
    <!-- Need to touch the output file for the case where the input data
       changed, but the output didn't -->
    <touch file="${java.output}" />
  </target>
				
  <property name="cvs_java_files" value="" />

  <target name="format_java" description="Format the generated java source" >
    <taskdef name="PTCodeFormat" classname="PTCodeFormatterTask" >
        <classpath>
            <pathelement path="../org.xtuml.bp.core/tools/" />
            <fileset dir="${plugins-home}/plugins" casesensitive="yes">
                <include name="**/org.eclipse.text_*.jar" />
                <include name="**/org.eclipse.ui_*.jar" />
                <include name="**/org.eclipse.jdt.core_*.jar" />
                <include name="**/org.eclipse.core.runtime_*.jar" />
                <include name="**/org.eclipse.osgi_*.jar" />
                <include name="**/org.eclipse.core.resources_*.jar" />
                <include name="**/org.eclipse.equinox.common_*.jar" />
            </fileset>
        </classpath>
    </taskdef>
     <PTCodeFormat>
        <fileset dir="src/masl" excludes="${cvs_java_files}" includes="*.java" />
     </PTCodeFormat>
  </target>

  <!-- CLEAN TARGETS -->

  <target name="clean_all"
        description="Clean entire project"
        depends="clean_classes,clean_java,clean_sql" >
    <echo>Done cleaning for ${ant.project.name}</echo>
  </target>

  <target name="clean_sql"
    description="Remove the generated file: ${sql.output}">
    <echo>Removing generated sql file: ${sql.output} ...</echo>
    <delete file="sql/${sql.output}" />
  </target>

  <target name="clean_java"
     description="Remove generated java source files." >
    <echo>Removing generated java source files ...</echo>
    <delete verbose="true" >
        <fileset dir="src/masl"
           excludes="${cvs_java_files}" />
    </delete>
  </target>

  <target name="clean_classes" description="Remove all compiled class files." >
    <echo>Removing compiled class files ...</echo>
    <delete verbose="true" dir="bin" />
  </target>

</project>